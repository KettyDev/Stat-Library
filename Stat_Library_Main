local StatThingLibrary = {}

getgenv().StatTexts = {}

for Index, Instance in pairs(game:GetService("Players").LocalPlayer.PlayerGui.StatLibrary:GetChildren()) do
	Instance:Destroy()
	getgenv().StatTexts = {}
end

function StatThingLibrary:Create(StatName)
	local PlayerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	local StatLibGui = game.Players.LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("StatLibrary")
	
	if not StatLibGui then
		StatLibGui = Instance.new("ScreenGui")
		StatLibGui.Name = "StatLibrary"
		StatLibGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		StatLibGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	end
	
	if getgenv().StatTexts[StatName] then
		return
	end
	
	local Stat = Instance.new("Frame")
	Stat.Name = StatName
	Stat.Position = UDim2.new(0.5, 0, 0.2, 0)
	Stat.Size = UDim2.new(0.14985, 0, 0.0635497, 0)
	Stat.BackgroundColor3 = Color3.new(0, 0.12549, 0.211765)
	Stat.BackgroundTransparency = 0.30000001192092896
	Stat.BorderSizePixel = 0
	Stat.BorderColor3 = Color3.new(0, 0, 0)
	Stat.AnchorPoint = Vector2.new(0.5, 0.5)
	Stat.AutomaticSize = Enum.AutomaticSize.X
	Stat.Transparency = 0.30000001192092896
	Stat.Parent = StatLibGui

	local UICorner = Instance.new("UICorner")
	UICorner.Name = "UICorner"
	UICorner.CornerRadius = UDim.new(0.2, 0)
	UICorner.Parent = Stat

	local UIStroke = Instance.new("UIStroke")
	UIStroke.Name = "UIStroke"
	UIStroke.Color = Color3.new(0.0509804, 0.0941177, 0.121569)
	UIStroke.Thickness = 5
	UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke.Parent = Stat

	local UIDragDetector = Instance.new("UIDragDetector")
	UIDragDetector.Name = "UIDragDetector"
	UIDragDetector.Parent = Stat

	local UIListLayout = Instance.new("UIListLayout")
	UIListLayout.Name = "UIListLayout"
	UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Center
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Parent = Stat

	local StatText = Instance.new("TextLabel")
	StatText.Name = "StatText"
	StatText.Position = UDim2.new(-1.62383, 0, 0.5, 0)
	StatText.Size = UDim2.new(0.0956566, 0, 0.799486, 0)
	StatText.BackgroundColor3 = Color3.new(0, 0.12549, 0.211765)
	StatText.BackgroundTransparency = 1
	StatText.BorderSizePixel = 0
	StatText.BorderColor3 = Color3.new(0, 0, 0)
	StatText.AnchorPoint = Vector2.new(0.5, 0.5)
	StatText.AutomaticSize = Enum.AutomaticSize.X
	StatText.Transparency = 1
	StatText.TextTransparency = 0
	StatText.Text = "125152152151521512515"
	StatText.TextColor3 = Color3.new(1, 1, 1)
	StatText.TextSize = 14
	StatText.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
	StatText.TextScaled = true
	StatText.TextWrapped = true
	StatText.Parent = Stat

	local UIStroke2 = Instance.new("UIStroke")
	UIStroke2.Name = "UIStroke"
	UIStroke2.Color = Color3.new(0.0509804, 0.0941177, 0.121569)
	UIStroke2.Thickness = 5
	UIStroke2.Parent = StatText

	local UIPadding = Instance.new("UIPadding")
	UIPadding.Name = "UIPadding"
	UIPadding.PaddingLeft = UDim.new(0.05, 0)
	UIPadding.PaddingRight = UDim.new(0.05, 0)
	UIPadding.Parent = StatText


	if not getgenv().StatTexts[StatName] then
		getgenv().StatTexts[StatName] = Stat
	else
		warn("Stat with this name already exists")
	end
end

function StatThingLibrary:SetText(StatName, EditText)
	local Stat = getgenv().StatTexts[StatName]
	if Stat then
		local StatText = Stat:FindFirstChild("StatText")
		if StatText then
			StatText.Text = EditText
		end
	else
		warn("This stat doesn't exist")
	end
end

function StatThingLibrary:ToggleVisibility(StatName)
	local Stat = getgenv().StatTexts[StatName]
	if Stat then
		Stat.Visible = not Stat.Visible
	end
end

function StatThingLibrary:SetVisibility(StatName, Boolean)
	local Stat = getgenv().StatTexts[StatName]
	if Stat then
		Stat.Visible = Boolean
	end
end

function StatThingLibrary:RemoveStat(StatName, Boolean)
	local Stat = getgenv().StatTexts[StatName]
	if Stat then
		Stat:Destroy()
		Stat = nil
	end
end

function StatThingLibrary:CheckIfExisting(StatName)
	if getgenv().StatTexts[StatName] then
		return true
	else
		print(StatName.." Doesn't exist.")
		return false
	end
end

return StatThingLibrary
